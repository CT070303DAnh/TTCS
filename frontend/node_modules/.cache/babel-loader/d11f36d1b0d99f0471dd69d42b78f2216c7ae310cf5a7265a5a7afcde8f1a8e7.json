{"ast":null,"code":"import apiClient from './apiClient';\n\n// Interface cho AI backend\n\nexport const diagnosisService = {\n  // Gọi Java backend để thực hiện chẩn đoán (bao gồm auth và lưu lịch sử)\n  async performDiagnosis(payload) {\n    const res = await apiClient.post('/diagnosis/perform', payload);\n    return res.data;\n  },\n  // Gọi AI backend trực tiếp để chỉ lấy kết quả chẩn đoán (không lưu lịch sử)\n  async getAIDiagnosis(payload) {\n    // Chuyển đổi dữ liệu từ frontend sang format AI backend\n    const aiPayload = convertToAIBackendFormat(payload);\n    const res = await fetch('http://localhost:8000/predict_diabetes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(aiPayload)\n    });\n    if (!res.ok) {\n      throw new Error('AI Backend không phản hồi');\n    }\n    return res.json();\n  },\n  // Lấy lịch sử từ Java backend\n  async getHistory() {\n    const res = await apiClient.get('/diagnosis/history');\n    return res.data;\n  }\n};\n\n// Hàm chuyển đổi dữ liệu từ frontend sang format AI backend\nfunction convertToAIBackendFormat(request) {\n  return {\n    HighBP: request.systolicBP && request.systolicBP >= 140 ? 1 : 0,\n    HighChol: 0,\n    // Giả định không có dữ liệu cholesterol\n    CholCheck: 1,\n    BMI: request.bmi || 25.0,\n    Smoker: request.smoking ? 1 : 0,\n    Stroke: 0,\n    // Giả định không có tiền sử đột quỵ\n    HeartDiseaseorAttack: 0,\n    // Giả định không có tiền sử tim mạch\n    PhysActivity: request.physicalActivity ? 1 : 0,\n    Fruits: 1,\n    // Giả định có ăn trái cây\n    Veggies: 1,\n    // Giả định có ăn rau\n    HvyAlcoholConsump: 0,\n    // Giả định không uống rượu nhiều\n    AnyHealthcare: 1,\n    NoDocbcCost: 0,\n    GenHlth: 3,\n    // Giả định sức khỏe tổng thể trung bình\n    MentHlth: 5,\n    // Giả định sức khỏe tinh thần tốt\n    PhysHlth: 3,\n    // Giả định sức khỏe thể chất trung bình\n    DiffWalk: 0,\n    // Giả định không khó khăn đi lại\n    Sex: 1,\n    // Giả định nam giới\n    Age: request.age || 50,\n    Education: 4,\n    // Giả định trình độ học vấn trung bình\n    Income: 6 // Giả định thu nhập trung bình\n  };\n}","map":{"version":3,"names":["apiClient","diagnosisService","performDiagnosis","payload","res","post","data","getAIDiagnosis","aiPayload","convertToAIBackendFormat","fetch","method","headers","body","JSON","stringify","ok","Error","json","getHistory","get","request","HighBP","systolicBP","HighChol","CholCheck","BMI","bmi","Smoker","smoking","Stroke","HeartDiseaseorAttack","PhysActivity","physicalActivity","Fruits","Veggies","HvyAlcoholConsump","AnyHealthcare","NoDocbcCost","GenHlth","MentHlth","PhysHlth","DiffWalk","Sex","Age","age","Education","Income"],"sources":["D:/TTCS/TTCSCN-nhom-30/frontend/src/services/diagnosisService.ts"],"sourcesContent":["import apiClient from './apiClient';\n\nexport interface DiagnosisRequest {\n  glucoseLevel: number;\n  hbA1c?: number;\n  bmi?: number;\n  systolicBP?: number;\n  diastolicBP?: number;\n  age?: number;\n  weight?: number;\n  height?: number;\n  familyHistory?: boolean;\n  physicalActivity?: boolean;\n  smoking?: boolean;\n}\n\nexport interface DiagnosisResponse {\n  id: number;\n  diagnosisResult: string;\n  diagnosisDisplayName: string;\n  riskScore: number;\n  recommendations: string;\n  createdAt: string;\n}\n\n// Interface cho AI backend\nexport interface AIBackendRequest {\n  HighBP: number;\n  HighChol: number;\n  CholCheck: number;\n  BMI: number;\n  Smoker: number;\n  Stroke: number;\n  HeartDiseaseorAttack: number;\n  PhysActivity: number;\n  Fruits: number;\n  Veggies: number;\n  HvyAlcoholConsump: number;\n  AnyHealthcare: number;\n  NoDocbcCost: number;\n  GenHlth: number;\n  MentHlth: number;\n  PhysHlth: number;\n  DiffWalk: number;\n  Sex: number;\n  Age: number;\n  Education: number;\n  Income: number;\n}\n\nexport interface AIBackendResponse {\n  prediction: number;\n  diagnosisResult: string;\n  riskScore: number;\n  recommendations: string;\n}\n\nexport const diagnosisService = {\n  // Gọi Java backend để thực hiện chẩn đoán (bao gồm auth và lưu lịch sử)\n  async performDiagnosis(payload: DiagnosisRequest): Promise<DiagnosisResponse> {\n    const res = await apiClient.post('/diagnosis/perform', payload);\n    return res.data;\n  },\n\n  // Gọi AI backend trực tiếp để chỉ lấy kết quả chẩn đoán (không lưu lịch sử)\n  async getAIDiagnosis(payload: DiagnosisRequest): Promise<AIBackendResponse> {\n    // Chuyển đổi dữ liệu từ frontend sang format AI backend\n    const aiPayload = convertToAIBackendFormat(payload);\n    \n    const res = await fetch('http://localhost:8000/predict_diabetes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(aiPayload),\n    });\n    \n    if (!res.ok) {\n      throw new Error('AI Backend không phản hồi');\n    }\n    \n    return res.json();\n  },\n\n  // Lấy lịch sử từ Java backend\n  async getHistory(): Promise<DiagnosisResponse[]> {\n    const res = await apiClient.get('/diagnosis/history');\n    return res.data;\n  },\n};\n\n// Hàm chuyển đổi dữ liệu từ frontend sang format AI backend\nfunction convertToAIBackendFormat(request: DiagnosisRequest): AIBackendRequest {\n  return {\n    HighBP: request.systolicBP && request.systolicBP >= 140 ? 1 : 0,\n    HighChol: 0, // Giả định không có dữ liệu cholesterol\n    CholCheck: 1,\n    BMI: request.bmi || 25.0,\n    Smoker: request.smoking ? 1 : 0,\n    Stroke: 0, // Giả định không có tiền sử đột quỵ\n    HeartDiseaseorAttack: 0, // Giả định không có tiền sử tim mạch\n    PhysActivity: request.physicalActivity ? 1 : 0,\n    Fruits: 1, // Giả định có ăn trái cây\n    Veggies: 1, // Giả định có ăn rau\n    HvyAlcoholConsump: 0, // Giả định không uống rượu nhiều\n    AnyHealthcare: 1,\n    NoDocbcCost: 0,\n    GenHlth: 3, // Giả định sức khỏe tổng thể trung bình\n    MentHlth: 5, // Giả định sức khỏe tinh thần tốt\n    PhysHlth: 3, // Giả định sức khỏe thể chất trung bình\n    DiffWalk: 0, // Giả định không khó khăn đi lại\n    Sex: 1, // Giả định nam giới\n    Age: request.age || 50,\n    Education: 4, // Giả định trình độ học vấn trung bình\n    Income: 6, // Giả định thu nhập trung bình\n  };\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;;AAyBnC;;AAgCA,OAAO,MAAMC,gBAAgB,GAAG;EAC9B;EACA,MAAMC,gBAAgBA,CAACC,OAAyB,EAA8B;IAC5E,MAAMC,GAAG,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,oBAAoB,EAAEF,OAAO,CAAC;IAC/D,OAAOC,GAAG,CAACE,IAAI;EACjB,CAAC;EAED;EACA,MAAMC,cAAcA,CAACJ,OAAyB,EAA8B;IAC1E;IACA,MAAMK,SAAS,GAAGC,wBAAwB,CAACN,OAAO,CAAC;IAEnD,MAAMC,GAAG,GAAG,MAAMM,KAAK,CAAC,wCAAwC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS;IAChC,CAAC,CAAC;IAEF,IAAI,CAACJ,GAAG,CAACY,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,OAAOb,GAAG,CAACc,IAAI,CAAC,CAAC;EACnB,CAAC;EAED;EACA,MAAMC,UAAUA,CAAA,EAAiC;IAC/C,MAAMf,GAAG,GAAG,MAAMJ,SAAS,CAACoB,GAAG,CAAC,oBAAoB,CAAC;IACrD,OAAOhB,GAAG,CAACE,IAAI;EACjB;AACF,CAAC;;AAED;AACA,SAASG,wBAAwBA,CAACY,OAAyB,EAAoB;EAC7E,OAAO;IACLC,MAAM,EAAED,OAAO,CAACE,UAAU,IAAIF,OAAO,CAACE,UAAU,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;IAC/DC,QAAQ,EAAE,CAAC;IAAE;IACbC,SAAS,EAAE,CAAC;IACZC,GAAG,EAAEL,OAAO,CAACM,GAAG,IAAI,IAAI;IACxBC,MAAM,EAAEP,OAAO,CAACQ,OAAO,GAAG,CAAC,GAAG,CAAC;IAC/BC,MAAM,EAAE,CAAC;IAAE;IACXC,oBAAoB,EAAE,CAAC;IAAE;IACzBC,YAAY,EAAEX,OAAO,CAACY,gBAAgB,GAAG,CAAC,GAAG,CAAC;IAC9CC,MAAM,EAAE,CAAC;IAAE;IACXC,OAAO,EAAE,CAAC;IAAE;IACZC,iBAAiB,EAAE,CAAC;IAAE;IACtBC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE,CAAC;IAAE;IACZC,QAAQ,EAAE,CAAC;IAAE;IACbC,QAAQ,EAAE,CAAC;IAAE;IACbC,QAAQ,EAAE,CAAC;IAAE;IACbC,GAAG,EAAE,CAAC;IAAE;IACRC,GAAG,EAAEvB,OAAO,CAACwB,GAAG,IAAI,EAAE;IACtBC,SAAS,EAAE,CAAC;IAAE;IACdC,MAAM,EAAE,CAAC,CAAE;EACb,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}